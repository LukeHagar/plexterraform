// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type GetBandwidthStatisticsRequest struct {
	// The timespan to retrieve statistics for
	// the exact meaning of this parameter is not known
	//
	Timespan *int64 `queryParam:"style=form,explode=true,name=Timespan"`
}

func (o *GetBandwidthStatisticsRequest) GetTimespan() *int64 {
	if o == nil {
		return nil
	}
	return o.Timespan
}

type GetBandwidthStatisticsErrors struct {
	Code    *float64 `json:"code,omitempty"`
	Message *string  `json:"message,omitempty"`
	Status  *float64 `json:"status,omitempty"`
}

func (o *GetBandwidthStatisticsErrors) GetCode() *float64 {
	if o == nil {
		return nil
	}
	return o.Code
}

func (o *GetBandwidthStatisticsErrors) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *GetBandwidthStatisticsErrors) GetStatus() *float64 {
	if o == nil {
		return nil
	}
	return o.Status
}

// GetBandwidthStatisticsStatisticsResponseBody - Unauthorized - Returned if the X-Plex-Token is missing from the header or query.
type GetBandwidthStatisticsStatisticsResponseBody struct {
	Errors []GetBandwidthStatisticsErrors `json:"errors,omitempty"`
}

func (o *GetBandwidthStatisticsStatisticsResponseBody) GetErrors() []GetBandwidthStatisticsErrors {
	if o == nil {
		return nil
	}
	return o.Errors
}

type GetBandwidthStatisticsDevice struct {
	ID               *int    `json:"id,omitempty"`
	Name             *string `json:"name,omitempty"`
	Platform         *string `json:"platform,omitempty"`
	ClientIdentifier *string `json:"clientIdentifier,omitempty"`
	CreatedAt        *int    `json:"createdAt,omitempty"`
}

func (o *GetBandwidthStatisticsDevice) GetID() *int {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *GetBandwidthStatisticsDevice) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *GetBandwidthStatisticsDevice) GetPlatform() *string {
	if o == nil {
		return nil
	}
	return o.Platform
}

func (o *GetBandwidthStatisticsDevice) GetClientIdentifier() *string {
	if o == nil {
		return nil
	}
	return o.ClientIdentifier
}

func (o *GetBandwidthStatisticsDevice) GetCreatedAt() *int {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

type GetBandwidthStatisticsAccount struct {
	ID                      *int    `json:"id,omitempty"`
	Key                     *string `json:"key,omitempty"`
	Name                    *string `json:"name,omitempty"`
	DefaultAudioLanguage    *string `json:"defaultAudioLanguage,omitempty"`
	AutoSelectAudio         *bool   `json:"autoSelectAudio,omitempty"`
	DefaultSubtitleLanguage *string `json:"defaultSubtitleLanguage,omitempty"`
	SubtitleMode            *int    `json:"subtitleMode,omitempty"`
	Thumb                   *string `json:"thumb,omitempty"`
}

func (o *GetBandwidthStatisticsAccount) GetID() *int {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *GetBandwidthStatisticsAccount) GetKey() *string {
	if o == nil {
		return nil
	}
	return o.Key
}

func (o *GetBandwidthStatisticsAccount) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *GetBandwidthStatisticsAccount) GetDefaultAudioLanguage() *string {
	if o == nil {
		return nil
	}
	return o.DefaultAudioLanguage
}

func (o *GetBandwidthStatisticsAccount) GetAutoSelectAudio() *bool {
	if o == nil {
		return nil
	}
	return o.AutoSelectAudio
}

func (o *GetBandwidthStatisticsAccount) GetDefaultSubtitleLanguage() *string {
	if o == nil {
		return nil
	}
	return o.DefaultSubtitleLanguage
}

func (o *GetBandwidthStatisticsAccount) GetSubtitleMode() *int {
	if o == nil {
		return nil
	}
	return o.SubtitleMode
}

func (o *GetBandwidthStatisticsAccount) GetThumb() *string {
	if o == nil {
		return nil
	}
	return o.Thumb
}

type StatisticsBandwidth struct {
	AccountID *int   `json:"accountID,omitempty"`
	DeviceID  *int   `json:"deviceID,omitempty"`
	Timespan  *int64 `json:"timespan,omitempty"`
	At        *int   `json:"at,omitempty"`
	Lan       *bool  `json:"lan,omitempty"`
	Bytes     *int64 `json:"bytes,omitempty"`
}

func (o *StatisticsBandwidth) GetAccountID() *int {
	if o == nil {
		return nil
	}
	return o.AccountID
}

func (o *StatisticsBandwidth) GetDeviceID() *int {
	if o == nil {
		return nil
	}
	return o.DeviceID
}

func (o *StatisticsBandwidth) GetTimespan() *int64 {
	if o == nil {
		return nil
	}
	return o.Timespan
}

func (o *StatisticsBandwidth) GetAt() *int {
	if o == nil {
		return nil
	}
	return o.At
}

func (o *StatisticsBandwidth) GetLan() *bool {
	if o == nil {
		return nil
	}
	return o.Lan
}

func (o *StatisticsBandwidth) GetBytes() *int64 {
	if o == nil {
		return nil
	}
	return o.Bytes
}

type GetBandwidthStatisticsMediaContainer struct {
	Size                *int                            `json:"size,omitempty"`
	Device              []GetBandwidthStatisticsDevice  `json:"Device,omitempty"`
	Account             []GetBandwidthStatisticsAccount `json:"Account,omitempty"`
	StatisticsBandwidth []StatisticsBandwidth           `json:"StatisticsBandwidth,omitempty"`
}

func (o *GetBandwidthStatisticsMediaContainer) GetSize() *int {
	if o == nil {
		return nil
	}
	return o.Size
}

func (o *GetBandwidthStatisticsMediaContainer) GetDevice() []GetBandwidthStatisticsDevice {
	if o == nil {
		return nil
	}
	return o.Device
}

func (o *GetBandwidthStatisticsMediaContainer) GetAccount() []GetBandwidthStatisticsAccount {
	if o == nil {
		return nil
	}
	return o.Account
}

func (o *GetBandwidthStatisticsMediaContainer) GetStatisticsBandwidth() []StatisticsBandwidth {
	if o == nil {
		return nil
	}
	return o.StatisticsBandwidth
}

// GetBandwidthStatisticsResponseBody - Bandwidth Statistics
type GetBandwidthStatisticsResponseBody struct {
	MediaContainer *GetBandwidthStatisticsMediaContainer `json:"MediaContainer,omitempty"`
}

func (o *GetBandwidthStatisticsResponseBody) GetMediaContainer() *GetBandwidthStatisticsMediaContainer {
	if o == nil {
		return nil
	}
	return o.MediaContainer
}

type GetBandwidthStatisticsResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Bandwidth Statistics
	TwoHundredApplicationJSONObject *GetBandwidthStatisticsResponseBody
	// Unauthorized - Returned if the X-Plex-Token is missing from the header or query.
	FourHundredAndOneApplicationJSONObject *GetBandwidthStatisticsStatisticsResponseBody
}

func (o *GetBandwidthStatisticsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetBandwidthStatisticsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetBandwidthStatisticsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *GetBandwidthStatisticsResponse) GetTwoHundredApplicationJSONObject() *GetBandwidthStatisticsResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationJSONObject
}

func (o *GetBandwidthStatisticsResponse) GetFourHundredAndOneApplicationJSONObject() *GetBandwidthStatisticsStatisticsResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndOneApplicationJSONObject
}
