// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/LukeHagar/terraform-provider-PlexAPI/internal/sdk/internal/utils"
	"net/http"
	"time"
)

type GetOnDeckErrors struct {
	Code    *float64 `json:"code,omitempty"`
	Message *string  `json:"message,omitempty"`
	Status  *float64 `json:"status,omitempty"`
}

func (o *GetOnDeckErrors) GetCode() *float64 {
	if o == nil {
		return nil
	}
	return o.Code
}

func (o *GetOnDeckErrors) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *GetOnDeckErrors) GetStatus() *float64 {
	if o == nil {
		return nil
	}
	return o.Status
}

// GetOnDeckLibraryResponseBody - Unauthorized - Returned if the X-Plex-Token is missing from the header or query.
type GetOnDeckLibraryResponseBody struct {
	Errors []GetOnDeckErrors `json:"errors,omitempty"`
}

func (o *GetOnDeckLibraryResponseBody) GetErrors() []GetOnDeckErrors {
	if o == nil {
		return nil
	}
	return o.Errors
}

type GetOnDeckStream struct {
	ID                   *float64 `json:"id,omitempty"`
	StreamType           *float64 `json:"streamType,omitempty"`
	Default              *bool    `json:"default,omitempty"`
	Codec                *string  `json:"codec,omitempty"`
	Index                *float64 `json:"index,omitempty"`
	Bitrate              *float64 `json:"bitrate,omitempty"`
	Language             *string  `json:"language,omitempty"`
	LanguageTag          *string  `json:"languageTag,omitempty"`
	LanguageCode         *string  `json:"languageCode,omitempty"`
	BitDepth             *float64 `json:"bitDepth,omitempty"`
	ChromaLocation       *string  `json:"chromaLocation,omitempty"`
	ChromaSubsampling    *string  `json:"chromaSubsampling,omitempty"`
	CodedHeight          *float64 `json:"codedHeight,omitempty"`
	CodedWidth           *float64 `json:"codedWidth,omitempty"`
	ColorRange           *string  `json:"colorRange,omitempty"`
	FrameRate            *float64 `json:"frameRate,omitempty"`
	Height               *float64 `json:"height,omitempty"`
	Level                *float64 `json:"level,omitempty"`
	Profile              *string  `json:"profile,omitempty"`
	RefFrames            *float64 `json:"refFrames,omitempty"`
	Width                *float64 `json:"width,omitempty"`
	DisplayTitle         *string  `json:"displayTitle,omitempty"`
	ExtendedDisplayTitle *string  `json:"extendedDisplayTitle,omitempty"`
}

func (o *GetOnDeckStream) GetID() *float64 {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *GetOnDeckStream) GetStreamType() *float64 {
	if o == nil {
		return nil
	}
	return o.StreamType
}

func (o *GetOnDeckStream) GetDefault() *bool {
	if o == nil {
		return nil
	}
	return o.Default
}

func (o *GetOnDeckStream) GetCodec() *string {
	if o == nil {
		return nil
	}
	return o.Codec
}

func (o *GetOnDeckStream) GetIndex() *float64 {
	if o == nil {
		return nil
	}
	return o.Index
}

func (o *GetOnDeckStream) GetBitrate() *float64 {
	if o == nil {
		return nil
	}
	return o.Bitrate
}

func (o *GetOnDeckStream) GetLanguage() *string {
	if o == nil {
		return nil
	}
	return o.Language
}

func (o *GetOnDeckStream) GetLanguageTag() *string {
	if o == nil {
		return nil
	}
	return o.LanguageTag
}

func (o *GetOnDeckStream) GetLanguageCode() *string {
	if o == nil {
		return nil
	}
	return o.LanguageCode
}

func (o *GetOnDeckStream) GetBitDepth() *float64 {
	if o == nil {
		return nil
	}
	return o.BitDepth
}

func (o *GetOnDeckStream) GetChromaLocation() *string {
	if o == nil {
		return nil
	}
	return o.ChromaLocation
}

func (o *GetOnDeckStream) GetChromaSubsampling() *string {
	if o == nil {
		return nil
	}
	return o.ChromaSubsampling
}

func (o *GetOnDeckStream) GetCodedHeight() *float64 {
	if o == nil {
		return nil
	}
	return o.CodedHeight
}

func (o *GetOnDeckStream) GetCodedWidth() *float64 {
	if o == nil {
		return nil
	}
	return o.CodedWidth
}

func (o *GetOnDeckStream) GetColorRange() *string {
	if o == nil {
		return nil
	}
	return o.ColorRange
}

func (o *GetOnDeckStream) GetFrameRate() *float64 {
	if o == nil {
		return nil
	}
	return o.FrameRate
}

func (o *GetOnDeckStream) GetHeight() *float64 {
	if o == nil {
		return nil
	}
	return o.Height
}

func (o *GetOnDeckStream) GetLevel() *float64 {
	if o == nil {
		return nil
	}
	return o.Level
}

func (o *GetOnDeckStream) GetProfile() *string {
	if o == nil {
		return nil
	}
	return o.Profile
}

func (o *GetOnDeckStream) GetRefFrames() *float64 {
	if o == nil {
		return nil
	}
	return o.RefFrames
}

func (o *GetOnDeckStream) GetWidth() *float64 {
	if o == nil {
		return nil
	}
	return o.Width
}

func (o *GetOnDeckStream) GetDisplayTitle() *string {
	if o == nil {
		return nil
	}
	return o.DisplayTitle
}

func (o *GetOnDeckStream) GetExtendedDisplayTitle() *string {
	if o == nil {
		return nil
	}
	return o.ExtendedDisplayTitle
}

type GetOnDeckPart struct {
	ID           *float64          `json:"id,omitempty"`
	Key          *string           `json:"key,omitempty"`
	Duration     *float64          `json:"duration,omitempty"`
	File         *string           `json:"file,omitempty"`
	Size         *float64          `json:"size,omitempty"`
	AudioProfile *string           `json:"audioProfile,omitempty"`
	Container    *string           `json:"container,omitempty"`
	VideoProfile *string           `json:"videoProfile,omitempty"`
	Stream       []GetOnDeckStream `json:"Stream,omitempty"`
}

func (o *GetOnDeckPart) GetID() *float64 {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *GetOnDeckPart) GetKey() *string {
	if o == nil {
		return nil
	}
	return o.Key
}

func (o *GetOnDeckPart) GetDuration() *float64 {
	if o == nil {
		return nil
	}
	return o.Duration
}

func (o *GetOnDeckPart) GetFile() *string {
	if o == nil {
		return nil
	}
	return o.File
}

func (o *GetOnDeckPart) GetSize() *float64 {
	if o == nil {
		return nil
	}
	return o.Size
}

func (o *GetOnDeckPart) GetAudioProfile() *string {
	if o == nil {
		return nil
	}
	return o.AudioProfile
}

func (o *GetOnDeckPart) GetContainer() *string {
	if o == nil {
		return nil
	}
	return o.Container
}

func (o *GetOnDeckPart) GetVideoProfile() *string {
	if o == nil {
		return nil
	}
	return o.VideoProfile
}

func (o *GetOnDeckPart) GetStream() []GetOnDeckStream {
	if o == nil {
		return nil
	}
	return o.Stream
}

type GetOnDeckMedia struct {
	ID              *float64        `json:"id,omitempty"`
	Duration        *float64        `json:"duration,omitempty"`
	Bitrate         *float64        `json:"bitrate,omitempty"`
	Width           *float64        `json:"width,omitempty"`
	Height          *float64        `json:"height,omitempty"`
	AspectRatio     *float64        `json:"aspectRatio,omitempty"`
	AudioChannels   *float64        `json:"audioChannels,omitempty"`
	AudioCodec      *string         `json:"audioCodec,omitempty"`
	VideoCodec      *string         `json:"videoCodec,omitempty"`
	VideoResolution *string         `json:"videoResolution,omitempty"`
	Container       *string         `json:"container,omitempty"`
	VideoFrameRate  *string         `json:"videoFrameRate,omitempty"`
	AudioProfile    *string         `json:"audioProfile,omitempty"`
	VideoProfile    *string         `json:"videoProfile,omitempty"`
	Part            []GetOnDeckPart `json:"Part,omitempty"`
}

func (o *GetOnDeckMedia) GetID() *float64 {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *GetOnDeckMedia) GetDuration() *float64 {
	if o == nil {
		return nil
	}
	return o.Duration
}

func (o *GetOnDeckMedia) GetBitrate() *float64 {
	if o == nil {
		return nil
	}
	return o.Bitrate
}

func (o *GetOnDeckMedia) GetWidth() *float64 {
	if o == nil {
		return nil
	}
	return o.Width
}

func (o *GetOnDeckMedia) GetHeight() *float64 {
	if o == nil {
		return nil
	}
	return o.Height
}

func (o *GetOnDeckMedia) GetAspectRatio() *float64 {
	if o == nil {
		return nil
	}
	return o.AspectRatio
}

func (o *GetOnDeckMedia) GetAudioChannels() *float64 {
	if o == nil {
		return nil
	}
	return o.AudioChannels
}

func (o *GetOnDeckMedia) GetAudioCodec() *string {
	if o == nil {
		return nil
	}
	return o.AudioCodec
}

func (o *GetOnDeckMedia) GetVideoCodec() *string {
	if o == nil {
		return nil
	}
	return o.VideoCodec
}

func (o *GetOnDeckMedia) GetVideoResolution() *string {
	if o == nil {
		return nil
	}
	return o.VideoResolution
}

func (o *GetOnDeckMedia) GetContainer() *string {
	if o == nil {
		return nil
	}
	return o.Container
}

func (o *GetOnDeckMedia) GetVideoFrameRate() *string {
	if o == nil {
		return nil
	}
	return o.VideoFrameRate
}

func (o *GetOnDeckMedia) GetAudioProfile() *string {
	if o == nil {
		return nil
	}
	return o.AudioProfile
}

func (o *GetOnDeckMedia) GetVideoProfile() *string {
	if o == nil {
		return nil
	}
	return o.VideoProfile
}

func (o *GetOnDeckMedia) GetPart() []GetOnDeckPart {
	if o == nil {
		return nil
	}
	return o.Part
}

type GetOnDeckGuids struct {
	ID *string `json:"id,omitempty"`
}

func (o *GetOnDeckGuids) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

type GetOnDeckMetadata struct {
	AllowSync             *bool            `json:"allowSync,omitempty"`
	LibrarySectionID      *float64         `json:"librarySectionID,omitempty"`
	LibrarySectionTitle   *string          `json:"librarySectionTitle,omitempty"`
	LibrarySectionUUID    *string          `json:"librarySectionUUID,omitempty"`
	RatingKey             *float64         `json:"ratingKey,omitempty"`
	Key                   *string          `json:"key,omitempty"`
	ParentRatingKey       *float64         `json:"parentRatingKey,omitempty"`
	GrandparentRatingKey  *float64         `json:"grandparentRatingKey,omitempty"`
	GUID                  *string          `json:"guid,omitempty"`
	ParentGUID            *string          `json:"parentGuid,omitempty"`
	GrandparentGUID       *string          `json:"grandparentGuid,omitempty"`
	Type                  *string          `json:"type,omitempty"`
	Title                 *string          `json:"title,omitempty"`
	GrandparentKey        *string          `json:"grandparentKey,omitempty"`
	ParentKey             *string          `json:"parentKey,omitempty"`
	LibrarySectionKey     *string          `json:"librarySectionKey,omitempty"`
	GrandparentTitle      *string          `json:"grandparentTitle,omitempty"`
	ParentTitle           *string          `json:"parentTitle,omitempty"`
	ContentRating         *string          `json:"contentRating,omitempty"`
	Summary               *string          `json:"summary,omitempty"`
	Index                 *float64         `json:"index,omitempty"`
	ParentIndex           *float64         `json:"parentIndex,omitempty"`
	LastViewedAt          *float64         `json:"lastViewedAt,omitempty"`
	Year                  *float64         `json:"year,omitempty"`
	Thumb                 *string          `json:"thumb,omitempty"`
	Art                   *string          `json:"art,omitempty"`
	ParentThumb           *string          `json:"parentThumb,omitempty"`
	GrandparentThumb      *string          `json:"grandparentThumb,omitempty"`
	GrandparentArt        *string          `json:"grandparentArt,omitempty"`
	GrandparentTheme      *string          `json:"grandparentTheme,omitempty"`
	Duration              *float64         `json:"duration,omitempty"`
	OriginallyAvailableAt *time.Time       `json:"originallyAvailableAt,omitempty"`
	AddedAt               *float64         `json:"addedAt,omitempty"`
	UpdatedAt             *float64         `json:"updatedAt,omitempty"`
	Media                 []GetOnDeckMedia `json:"Media,omitempty"`
	Guids                 []GetOnDeckGuids `json:"Guid,omitempty"`
}

func (g GetOnDeckMetadata) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetOnDeckMetadata) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *GetOnDeckMetadata) GetAllowSync() *bool {
	if o == nil {
		return nil
	}
	return o.AllowSync
}

func (o *GetOnDeckMetadata) GetLibrarySectionID() *float64 {
	if o == nil {
		return nil
	}
	return o.LibrarySectionID
}

func (o *GetOnDeckMetadata) GetLibrarySectionTitle() *string {
	if o == nil {
		return nil
	}
	return o.LibrarySectionTitle
}

func (o *GetOnDeckMetadata) GetLibrarySectionUUID() *string {
	if o == nil {
		return nil
	}
	return o.LibrarySectionUUID
}

func (o *GetOnDeckMetadata) GetRatingKey() *float64 {
	if o == nil {
		return nil
	}
	return o.RatingKey
}

func (o *GetOnDeckMetadata) GetKey() *string {
	if o == nil {
		return nil
	}
	return o.Key
}

func (o *GetOnDeckMetadata) GetParentRatingKey() *float64 {
	if o == nil {
		return nil
	}
	return o.ParentRatingKey
}

func (o *GetOnDeckMetadata) GetGrandparentRatingKey() *float64 {
	if o == nil {
		return nil
	}
	return o.GrandparentRatingKey
}

func (o *GetOnDeckMetadata) GetGUID() *string {
	if o == nil {
		return nil
	}
	return o.GUID
}

func (o *GetOnDeckMetadata) GetParentGUID() *string {
	if o == nil {
		return nil
	}
	return o.ParentGUID
}

func (o *GetOnDeckMetadata) GetGrandparentGUID() *string {
	if o == nil {
		return nil
	}
	return o.GrandparentGUID
}

func (o *GetOnDeckMetadata) GetType() *string {
	if o == nil {
		return nil
	}
	return o.Type
}

func (o *GetOnDeckMetadata) GetTitle() *string {
	if o == nil {
		return nil
	}
	return o.Title
}

func (o *GetOnDeckMetadata) GetGrandparentKey() *string {
	if o == nil {
		return nil
	}
	return o.GrandparentKey
}

func (o *GetOnDeckMetadata) GetParentKey() *string {
	if o == nil {
		return nil
	}
	return o.ParentKey
}

func (o *GetOnDeckMetadata) GetLibrarySectionKey() *string {
	if o == nil {
		return nil
	}
	return o.LibrarySectionKey
}

func (o *GetOnDeckMetadata) GetGrandparentTitle() *string {
	if o == nil {
		return nil
	}
	return o.GrandparentTitle
}

func (o *GetOnDeckMetadata) GetParentTitle() *string {
	if o == nil {
		return nil
	}
	return o.ParentTitle
}

func (o *GetOnDeckMetadata) GetContentRating() *string {
	if o == nil {
		return nil
	}
	return o.ContentRating
}

func (o *GetOnDeckMetadata) GetSummary() *string {
	if o == nil {
		return nil
	}
	return o.Summary
}

func (o *GetOnDeckMetadata) GetIndex() *float64 {
	if o == nil {
		return nil
	}
	return o.Index
}

func (o *GetOnDeckMetadata) GetParentIndex() *float64 {
	if o == nil {
		return nil
	}
	return o.ParentIndex
}

func (o *GetOnDeckMetadata) GetLastViewedAt() *float64 {
	if o == nil {
		return nil
	}
	return o.LastViewedAt
}

func (o *GetOnDeckMetadata) GetYear() *float64 {
	if o == nil {
		return nil
	}
	return o.Year
}

func (o *GetOnDeckMetadata) GetThumb() *string {
	if o == nil {
		return nil
	}
	return o.Thumb
}

func (o *GetOnDeckMetadata) GetArt() *string {
	if o == nil {
		return nil
	}
	return o.Art
}

func (o *GetOnDeckMetadata) GetParentThumb() *string {
	if o == nil {
		return nil
	}
	return o.ParentThumb
}

func (o *GetOnDeckMetadata) GetGrandparentThumb() *string {
	if o == nil {
		return nil
	}
	return o.GrandparentThumb
}

func (o *GetOnDeckMetadata) GetGrandparentArt() *string {
	if o == nil {
		return nil
	}
	return o.GrandparentArt
}

func (o *GetOnDeckMetadata) GetGrandparentTheme() *string {
	if o == nil {
		return nil
	}
	return o.GrandparentTheme
}

func (o *GetOnDeckMetadata) GetDuration() *float64 {
	if o == nil {
		return nil
	}
	return o.Duration
}

func (o *GetOnDeckMetadata) GetOriginallyAvailableAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.OriginallyAvailableAt
}

func (o *GetOnDeckMetadata) GetAddedAt() *float64 {
	if o == nil {
		return nil
	}
	return o.AddedAt
}

func (o *GetOnDeckMetadata) GetUpdatedAt() *float64 {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}

func (o *GetOnDeckMetadata) GetMedia() []GetOnDeckMedia {
	if o == nil {
		return nil
	}
	return o.Media
}

func (o *GetOnDeckMetadata) GetGuids() []GetOnDeckGuids {
	if o == nil {
		return nil
	}
	return o.Guids
}

type GetOnDeckMediaContainer struct {
	Size            *float64            `json:"size,omitempty"`
	AllowSync       *bool               `json:"allowSync,omitempty"`
	Identifier      *string             `json:"identifier,omitempty"`
	MediaTagPrefix  *string             `json:"mediaTagPrefix,omitempty"`
	MediaTagVersion *float64            `json:"mediaTagVersion,omitempty"`
	MixedParents    *bool               `json:"mixedParents,omitempty"`
	Metadata        []GetOnDeckMetadata `json:"Metadata,omitempty"`
}

func (o *GetOnDeckMediaContainer) GetSize() *float64 {
	if o == nil {
		return nil
	}
	return o.Size
}

func (o *GetOnDeckMediaContainer) GetAllowSync() *bool {
	if o == nil {
		return nil
	}
	return o.AllowSync
}

func (o *GetOnDeckMediaContainer) GetIdentifier() *string {
	if o == nil {
		return nil
	}
	return o.Identifier
}

func (o *GetOnDeckMediaContainer) GetMediaTagPrefix() *string {
	if o == nil {
		return nil
	}
	return o.MediaTagPrefix
}

func (o *GetOnDeckMediaContainer) GetMediaTagVersion() *float64 {
	if o == nil {
		return nil
	}
	return o.MediaTagVersion
}

func (o *GetOnDeckMediaContainer) GetMixedParents() *bool {
	if o == nil {
		return nil
	}
	return o.MixedParents
}

func (o *GetOnDeckMediaContainer) GetMetadata() []GetOnDeckMetadata {
	if o == nil {
		return nil
	}
	return o.Metadata
}

// GetOnDeckResponseBody - The on Deck content
type GetOnDeckResponseBody struct {
	MediaContainer *GetOnDeckMediaContainer `json:"MediaContainer,omitempty"`
}

func (o *GetOnDeckResponseBody) GetMediaContainer() *GetOnDeckMediaContainer {
	if o == nil {
		return nil
	}
	return o.MediaContainer
}

type GetOnDeckResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// The on Deck content
	TwoHundredApplicationJSONObject *GetOnDeckResponseBody
	// Unauthorized - Returned if the X-Plex-Token is missing from the header or query.
	FourHundredAndOneApplicationJSONObject *GetOnDeckLibraryResponseBody
}

func (o *GetOnDeckResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetOnDeckResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetOnDeckResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *GetOnDeckResponse) GetTwoHundredApplicationJSONObject() *GetOnDeckResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationJSONObject
}

func (o *GetOnDeckResponse) GetFourHundredAndOneApplicationJSONObject() *GetOnDeckLibraryResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndOneApplicationJSONObject
}
