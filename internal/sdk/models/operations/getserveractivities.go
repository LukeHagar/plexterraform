// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type GetServerActivitiesErrors struct {
	Code    *float64 `json:"code,omitempty"`
	Message *string  `json:"message,omitempty"`
	Status  *float64 `json:"status,omitempty"`
}

func (o *GetServerActivitiesErrors) GetCode() *float64 {
	if o == nil {
		return nil
	}
	return o.Code
}

func (o *GetServerActivitiesErrors) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *GetServerActivitiesErrors) GetStatus() *float64 {
	if o == nil {
		return nil
	}
	return o.Status
}

// GetServerActivitiesActivitiesResponseBody - Unauthorized - Returned if the X-Plex-Token is missing from the header or query.
type GetServerActivitiesActivitiesResponseBody struct {
	Errors []GetServerActivitiesErrors `json:"errors,omitempty"`
}

func (o *GetServerActivitiesActivitiesResponseBody) GetErrors() []GetServerActivitiesErrors {
	if o == nil {
		return nil
	}
	return o.Errors
}

type Context struct {
	LibrarySectionID *string `json:"librarySectionID,omitempty"`
}

func (o *Context) GetLibrarySectionID() *string {
	if o == nil {
		return nil
	}
	return o.LibrarySectionID
}

type Activity struct {
	UUID        *string  `json:"uuid,omitempty"`
	Type        *string  `json:"type,omitempty"`
	Cancellable *bool    `json:"cancellable,omitempty"`
	UserID      *float64 `json:"userID,omitempty"`
	Title       *string  `json:"title,omitempty"`
	Subtitle    *string  `json:"subtitle,omitempty"`
	Progress    *float64 `json:"progress,omitempty"`
	Context     *Context `json:"Context,omitempty"`
}

func (o *Activity) GetUUID() *string {
	if o == nil {
		return nil
	}
	return o.UUID
}

func (o *Activity) GetType() *string {
	if o == nil {
		return nil
	}
	return o.Type
}

func (o *Activity) GetCancellable() *bool {
	if o == nil {
		return nil
	}
	return o.Cancellable
}

func (o *Activity) GetUserID() *float64 {
	if o == nil {
		return nil
	}
	return o.UserID
}

func (o *Activity) GetTitle() *string {
	if o == nil {
		return nil
	}
	return o.Title
}

func (o *Activity) GetSubtitle() *string {
	if o == nil {
		return nil
	}
	return o.Subtitle
}

func (o *Activity) GetProgress() *float64 {
	if o == nil {
		return nil
	}
	return o.Progress
}

func (o *Activity) GetContext() *Context {
	if o == nil {
		return nil
	}
	return o.Context
}

type GetServerActivitiesMediaContainer struct {
	Size     *float64   `json:"size,omitempty"`
	Activity []Activity `json:"Activity,omitempty"`
}

func (o *GetServerActivitiesMediaContainer) GetSize() *float64 {
	if o == nil {
		return nil
	}
	return o.Size
}

func (o *GetServerActivitiesMediaContainer) GetActivity() []Activity {
	if o == nil {
		return nil
	}
	return o.Activity
}

// GetServerActivitiesResponseBody - The Server Activities
type GetServerActivitiesResponseBody struct {
	MediaContainer *GetServerActivitiesMediaContainer `json:"MediaContainer,omitempty"`
}

func (o *GetServerActivitiesResponseBody) GetMediaContainer() *GetServerActivitiesMediaContainer {
	if o == nil {
		return nil
	}
	return o.MediaContainer
}

type GetServerActivitiesResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// The Server Activities
	TwoHundredApplicationJSONObject *GetServerActivitiesResponseBody
	// Unauthorized - Returned if the X-Plex-Token is missing from the header or query.
	FourHundredAndOneApplicationJSONObject *GetServerActivitiesActivitiesResponseBody
}

func (o *GetServerActivitiesResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetServerActivitiesResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetServerActivitiesResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *GetServerActivitiesResponse) GetTwoHundredApplicationJSONObject() *GetServerActivitiesResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationJSONObject
}

func (o *GetServerActivitiesResponse) GetFourHundredAndOneApplicationJSONObject() *GetServerActivitiesActivitiesResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndOneApplicationJSONObject
}
