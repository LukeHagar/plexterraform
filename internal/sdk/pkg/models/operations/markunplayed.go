// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type MarkUnplayedRequest struct {
	// The media key to mark as Unplayed
	Key float64 `queryParam:"style=form,explode=true,name=key"`
}

func (o *MarkUnplayedRequest) GetKey() float64 {
	if o == nil {
		return 0.0
	}
	return o.Key
}

type MarkUnplayedErrors struct {
	Code    *float64 `json:"code,omitempty"`
	Message *string  `json:"message,omitempty"`
	Status  *float64 `json:"status,omitempty"`
}

func (o *MarkUnplayedErrors) GetCode() *float64 {
	if o == nil {
		return nil
	}
	return o.Code
}

func (o *MarkUnplayedErrors) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *MarkUnplayedErrors) GetStatus() *float64 {
	if o == nil {
		return nil
	}
	return o.Status
}

// MarkUnplayedResponseBody - Unauthorized - Returned if the X-Plex-Token is missing from the header or query.
type MarkUnplayedResponseBody struct {
	Errors []MarkUnplayedErrors `json:"errors,omitempty"`
}

func (o *MarkUnplayedResponseBody) GetErrors() []MarkUnplayedErrors {
	if o == nil {
		return nil
	}
	return o.Errors
}

type MarkUnplayedResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Unauthorized - Returned if the X-Plex-Token is missing from the header or query.
	Object *MarkUnplayedResponseBody
}

func (o *MarkUnplayedResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *MarkUnplayedResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *MarkUnplayedResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *MarkUnplayedResponse) GetObject() *MarkUnplayedResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
