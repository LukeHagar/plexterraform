// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type AddPlaylistContentsRequest struct {
	// the ID of the playlist
	PlaylistID float64 `pathParam:"style=simple,explode=false,name=playlistID"`
	// the content URI for the playlist
	URI string `queryParam:"style=form,explode=true,name=uri"`
	// the play queue to add to a playlist
	PlayQueueID float64 `queryParam:"style=form,explode=true,name=playQueueID"`
}

func (o *AddPlaylistContentsRequest) GetPlaylistID() float64 {
	if o == nil {
		return 0.0
	}
	return o.PlaylistID
}

func (o *AddPlaylistContentsRequest) GetURI() string {
	if o == nil {
		return ""
	}
	return o.URI
}

func (o *AddPlaylistContentsRequest) GetPlayQueueID() float64 {
	if o == nil {
		return 0.0
	}
	return o.PlayQueueID
}

type AddPlaylistContentsErrors struct {
	Code    *float64 `json:"code,omitempty"`
	Message *string  `json:"message,omitempty"`
	Status  *float64 `json:"status,omitempty"`
}

func (o *AddPlaylistContentsErrors) GetCode() *float64 {
	if o == nil {
		return nil
	}
	return o.Code
}

func (o *AddPlaylistContentsErrors) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *AddPlaylistContentsErrors) GetStatus() *float64 {
	if o == nil {
		return nil
	}
	return o.Status
}

// AddPlaylistContentsResponseBody - Unauthorized - Returned if the X-Plex-Token is missing from the header or query.
type AddPlaylistContentsResponseBody struct {
	Errors []AddPlaylistContentsErrors `json:"errors,omitempty"`
}

func (o *AddPlaylistContentsResponseBody) GetErrors() []AddPlaylistContentsErrors {
	if o == nil {
		return nil
	}
	return o.Errors
}

type AddPlaylistContentsResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Unauthorized - Returned if the X-Plex-Token is missing from the header or query.
	Object *AddPlaylistContentsResponseBody
}

func (o *AddPlaylistContentsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *AddPlaylistContentsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *AddPlaylistContentsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *AddPlaylistContentsResponse) GetObject() *AddPlaylistContentsResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
